//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.1 版自动生成。
// 
#pragma warning disable 1591

namespace Gold.NCWebServiceForRFID {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="IBillXMLExportServiceSOAP11Binding", Namespace="http://ws.cxbj.uapeai.itf.nc/IBillXMLExportService")]
    public partial class IBillXMLExportService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback BillInfoQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback BillDetailQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback BasicInfoQueryOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public IBillXMLExportService() {
            this.Url = global::Gold.Properties.Settings.Default.Gold_NCWebServiceForRFID_IBillXMLExportService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event BillInfoQueryCompletedEventHandler BillInfoQueryCompleted;
        
        /// <remarks/>
        public event BillDetailQueryCompletedEventHandler BillDetailQueryCompleted;
        
        /// <remarks/>
        public event BasicInfoQueryCompletedEventHandler BasicInfoQueryCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:BillInfoQuery", RequestNamespace="http://ws.cxbj.uapeai.itf.nc/IBillXMLExportService", ResponseNamespace="http://ws.cxbj.uapeai.itf.nc/IBillXMLExportService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string BillInfoQuery([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string @string, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string string1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string string2, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string string3, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] System.Nullable<int> @int, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] [System.Xml.Serialization.XmlIgnoreAttribute()] bool intSpecified) {
            object[] results = this.Invoke("BillInfoQuery", new object[] {
                        @string,
                        string1,
                        string2,
                        string3,
                        @int,
                        intSpecified});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BillInfoQueryAsync(string @string, string string1, string string2, string string3, System.Nullable<int> @int, bool intSpecified) {
            this.BillInfoQueryAsync(@string, string1, string2, string3, @int, intSpecified, null);
        }
        
        /// <remarks/>
        public void BillInfoQueryAsync(string @string, string string1, string string2, string string3, System.Nullable<int> @int, bool intSpecified, object userState) {
            if ((this.BillInfoQueryOperationCompleted == null)) {
                this.BillInfoQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBillInfoQueryOperationCompleted);
            }
            this.InvokeAsync("BillInfoQuery", new object[] {
                        @string,
                        string1,
                        string2,
                        string3,
                        @int,
                        intSpecified}, this.BillInfoQueryOperationCompleted, userState);
        }
        
        private void OnBillInfoQueryOperationCompleted(object arg) {
            if ((this.BillInfoQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BillInfoQueryCompleted(this, new BillInfoQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:BillDetailQuery", RequestNamespace="http://ws.cxbj.uapeai.itf.nc/IBillXMLExportService", ResponseNamespace="http://ws.cxbj.uapeai.itf.nc/IBillXMLExportService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string BillDetailQuery([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string @string, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string string1, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string string2) {
            object[] results = this.Invoke("BillDetailQuery", new object[] {
                        @string,
                        string1,
                        string2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BillDetailQueryAsync(string @string, string string1, string string2) {
            this.BillDetailQueryAsync(@string, string1, string2, null);
        }
        
        /// <remarks/>
        public void BillDetailQueryAsync(string @string, string string1, string string2, object userState) {
            if ((this.BillDetailQueryOperationCompleted == null)) {
                this.BillDetailQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBillDetailQueryOperationCompleted);
            }
            this.InvokeAsync("BillDetailQuery", new object[] {
                        @string,
                        string1,
                        string2}, this.BillDetailQueryOperationCompleted, userState);
        }
        
        private void OnBillDetailQueryOperationCompleted(object arg) {
            if ((this.BillDetailQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BillDetailQueryCompleted(this, new BillDetailQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:BasicInfoQuery", RequestNamespace="http://ws.cxbj.uapeai.itf.nc/IBillXMLExportService", ResponseNamespace="http://ws.cxbj.uapeai.itf.nc/IBillXMLExportService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)]
        public string BasicInfoQuery([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string @string, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable=true)] string string1) {
            object[] results = this.Invoke("BasicInfoQuery", new object[] {
                        @string,
                        string1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BasicInfoQueryAsync(string @string, string string1) {
            this.BasicInfoQueryAsync(@string, string1, null);
        }
        
        /// <remarks/>
        public void BasicInfoQueryAsync(string @string, string string1, object userState) {
            if ((this.BasicInfoQueryOperationCompleted == null)) {
                this.BasicInfoQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBasicInfoQueryOperationCompleted);
            }
            this.InvokeAsync("BasicInfoQuery", new object[] {
                        @string,
                        string1}, this.BasicInfoQueryOperationCompleted, userState);
        }
        
        private void OnBasicInfoQueryOperationCompleted(object arg) {
            if ((this.BasicInfoQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BasicInfoQueryCompleted(this, new BasicInfoQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BillInfoQueryCompletedEventHandler(object sender, BillInfoQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BillInfoQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BillInfoQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BillDetailQueryCompletedEventHandler(object sender, BillDetailQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BillDetailQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BillDetailQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void BasicInfoQueryCompletedEventHandler(object sender, BasicInfoQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BasicInfoQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BasicInfoQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591